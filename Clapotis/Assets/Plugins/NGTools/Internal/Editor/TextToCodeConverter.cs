using NGTools;
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using UnityEditor;
using UnityEngine;

namespace NGToolsEditor.Internal
{
	public class TextToCodeConverter : EditorWindow
	{
		public string	filePath;

		private string[]					languages;
		private Dictionary<string, string>	locale = new Dictionary<string, string>();

		[MenuItem(Constants.PackageTitle + "/Internal/Convert language into code")]
		private static void	Open()
		{
			EditorWindow.GetWindow<TextToCodeConverter>();
		}

		protected virtual void	OnEnable()
		{
			string	rootPath = Path.Combine(HQ.RootPath, Constants.RelativeLocaleFolder);

			if (Directory.Exists(rootPath) == true)
			{
				this.languages = Directory.GetDirectories(rootPath);

				for (int i = 0; i < this.languages.Length; i++)
					this.languages[i] = this.languages[i].Substring(rootPath.Length);
			}
			else
			{
				this.languages = new string[0];
				Debug.LogError("Locale directory not found at \"" + rootPath + "\".");
			}

			Utility.LoadEditorPref(this);
		}

		protected virtual void	OnDisable()
		{
			Utility.SaveEditorPref(this);
		}

		protected virtual void	OnGUI()
		{
			this.filePath = EditorGUILayout.TextField("Language File Path", this.filePath);

			for (int i = 0; i < this.languages.Length; i++)
			{
				if (GUILayout.Button(this.languages[i]) == true)
					this.ConvertIntoCode(this.languages[i]);
			}
		}

		private void	ConvertIntoCode(string lang)
		{
			Localization.LoadLanguage(lang, this.locale);

			Texture2D	icon = AssetDatabase.LoadAssetAtPath(Path.Combine(HQ.RootPath, Constants.RelativeLocaleFolder + lang + "/" + lang + ".png"), typeof(Texture)) as Texture2D;

			StringBuilder	buffer = Utility.GetBuffer();

			buffer.AppendLine("// File auto-generated by TextToCodeConverter.");
			buffer.AppendLine("namespace NGToolsEditor");
			buffer.AppendLine("{");
			buffer.AppendLine("	internal sealed class Language_" + lang + " : EmbedLocale");
			buffer.AppendLine("	{");
			buffer.AppendLine("		public	Language_" + lang + "() : base(\"" + lang + "\", \"" + Convert.ToBase64String(icon.EncodeToPNG()) + "\")");
			buffer.AppendLine("		{");

			foreach (var pair in this.locale)
				buffer.AppendLine("			this.pairs.Add(\"" + pair.Key + "\", \"" + pair.Value.Replace("\\", "\\\\").Replace("\"", "\\\"").Replace("\n", "\\n") + "\");");

			buffer.AppendLine("		}");
			buffer.AppendLine("	}");
			buffer.AppendLine("}");

			Directory.CreateDirectory(Path.GetDirectoryName(this.filePath));

			File.WriteAllText(this.filePath, Utility.ReturnBuffer(buffer));

			InternalNGDebug.Log("Language \"" + lang + "\" successfully converted in \"" + this.filePath + "\".");
		}
	}
}